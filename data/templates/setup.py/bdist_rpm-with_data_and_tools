        elif line.startswith('%files'):
          python_spec_file.extend([
              '%package -n %{name}-tools',
              'Summary: Tools for {0:s}'.format(summary),
              '',
              '%description -n %{name}-tools'])

          python_spec_file.extend(description)

          lines = [
              '%files -n %{name}-data',
              '%defattr(644,root,root,755)',
              '%license LICENSE',
              '%doc ACKNOWLEDGEMENTS AUTHORS README',
              '%{_datadir}/%{name}/*',
              '',
              '%files -n {0:s}-%{{name}}'.format(python_package),
              '%defattr(644,root,root,755)',
              '%license LICENSE',
              '%doc ACKNOWLEDGEMENTS AUTHORS README']

          if python_package == 'python3':
            lines.extend([
                '%{python3_sitelib}/plaso/*.py',
                '%{python3_sitelib}/plaso/*/*.py',
                '%{python3_sitelib}/plaso/*/*.yaml',
                '%{python3_sitelib}/plaso/*/*/*.py',
                '%{python3_sitelib}/plaso/*/*/*.yaml',
                '%{python3_sitelib}/plaso*.egg-info/*',
                '',
                '%exclude %{_prefix}/share/doc/*',
                '%exclude %{python3_sitelib}/plaso/__pycache__/*',
                '%exclude %{python3_sitelib}/plaso/*/__pycache__/*',
                '%exclude %{python3_sitelib}/plaso/*/*/__pycache__/*'])

          else:
            lines.extend([
                '%{python2_sitelib}/plaso/*.py',
                '%{python2_sitelib}/plaso/*/*.py',
                '%{python2_sitelib}/plaso/*/*.yaml',
                '%{python2_sitelib}/plaso/*/*/*.py',
                '%{python2_sitelib}/plaso/*/*/*.yaml',
                '%{python2_sitelib}/plaso*.egg-info/*',
                '',
                '%exclude %{_prefix}/share/doc/*',
                '%exclude %{python2_sitelib}/plaso/*.pyc',
                '%exclude %{python2_sitelib}/plaso/*.pyo',
                '%exclude %{python2_sitelib}/plaso/*/*.pyc',
                '%exclude %{python2_sitelib}/plaso/*/*.pyo',
                '%exclude %{python2_sitelib}/plaso/*/*/*.pyc',
                '%exclude %{python2_sitelib}/plaso/*/*/*.pyo'])

          python_spec_file.extend(lines)
          break

        elif line.startswith('%prep'):
          in_description = False

          python_spec_file.extend([
              '%package -n %{name}-data',
              'Summary: Data files for {0:s}'.format(summary),
              '',
              '%description -n %{name}-data'])

          python_spec_file.extend(description)

          python_spec_file.append(
              '%package -n {0:s}-%{{name}}'.format(python_package))
          if python_package == 'python2':
            python_spec_file.extend([
                'Obsoletes: python-plaso < %{version}',
                'Provides: python-plaso = %{version}'])
            python_summary = 'Python 2 module of {0:s}'.format(summary)
          else:
            python_summary = 'Python 3 module of {0:s}'.format(summary)

          python_spec_file.extend([
              'Requires: ${project_name}-data {0:s}'.format(requires),
              'Summary: {0:s}'.format(python_summary),
              '',
              '%description -n {0:s}-%{{name}}'.format(python_package)])

          python_spec_file.extend(description)

        elif in_description:
          # Ignore leading white lines in the description.
          if not description and not line:
            continue

          description.append(line)

        python_spec_file.append(line)

      python_spec_file.extend([
          '',
          '%files -n %{name}-tools',
          '%{_bindir}/*.py'])

      return python_spec_file
